#!/usr/bin/env node
const read = require('read-input')
const parse = require('../lib/parser')

const cli = require('meow')(`
  Usage:
    $ tps-report FILE [OPTIONS]
    $ tps-report [OPTIONS] < FILE

  Options:
    -f, --format FMT   output format (html, json, cli)
        --html         same as '--format html'
        --json         same as '--format json'
        --open         open in browser. implies '--format html'

    -h, --help         show usage information
    -v, --version      print version info and exit
`, {
  boolean: ['help', 'version', 'html', 'json', 'open'],
  string: ['format'],
  alias: {
    h: 'help', v: 'version',
    f: 'format'
  },
  default: {
    format: 'cli'
  }
})

if (cli.flags.html) {
  cli.flags.format = 'html'
}

if (cli.flags.json) {
  cli.flags.format = 'json'
}

if (cli.flags.open) {
  cli.flags.format = 'html-open'
}

read(cli.input)
.then(res => {
  res.files.forEach(file => {
    const data = parse(file.data)
    if (cli.flags.format === 'cli') {
      const render = require('../lib/cli_format')
      const output = render(data)
      console.log(output)
    }
    else if (cli.flags.format === 'json') {
      console.log(JSON.stringify(data, null, 2))
    }
    else if (cli.flags.format === 'html') {
      const render = require('../lib/html_format')
      const output = render(data)
      console.log(output)
    }
    else if (cli.flags.format === 'html-open') {
      const file = require('tempfile')('.html')
      const render = require('../lib/html_format')
      const output = render(data)
      require('fs').writeFileSync(file, output, 'utf-8')
      console.log(`${file}`)
      require('open')(file)
    }
    // console.log('output:', require('util').inspect(output, { depth: null, colors: true }))
  })
})
